apply plugin: 'project-report'

allprojects {
  version = '0.0.13'
  group = 'org.sagebionetworks.bridge'

  repositories {
    jcenter()
    maven {
      url "https://maven.google.com"
    }
    maven { url 'http://repo-maven.sagebridge.org/' }
    maven { url "https://jitpack.io" }
    mavenLocal()

    // for temp repo https://bintray.com/sage-bionetworks/bridge-maven-release/rest-client-android
    maven { url 'https://dl.bintray.com/sage-bionetworks/bridge-maven-release' }
  }
}

buildscript {
  ext.kotlin_version = '1.2.41'
  ext.dokka_version = '0.9.17'

  repositories {
    jcenter()
    google()
    maven { url 'https://plugins.gradle.org/m2/' }
  }
  dependencies {
    classpath 'com.android.tools.build:gradle:3.1.3'
    classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7'
    classpath 'com.github.dcendents:android-maven-gradle-plugin:1.4.1'

    // SageResearch
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    classpath "org.jetbrains.dokka:dokka-android-gradle-plugin:$dokka_version"
//    classpath "org.jetbrains.dokka:dokka-fatjar:$dokka_version"
    classpath 'com.jakewharton:butterknife-gradle-plugin:8.4.0'

    // NOTE: Do not place your application dependencies here; they belong
    // in the individual module build.gradle files
  }
}

// Turn off doclint in java 8, see: http://blog.joda.org/2014/02/turning-off-doclint-in-jdk-8-javadoc.html
if (JavaVersion.current().isJava8Compatible()) {
  allprojects {
    tasks.withType(Javadoc) {
      options.addStringOption('Xdoclint:none', '-quiet')
    }
  }
}

subprojects {
  afterEvaluate { project ->

    // These two projects are JARed and DOCed using their own build.gradle files
    if (!project.projectDir.absolutePath.contains("backbone") && !project.projectDir.absolutePath.contains("skin")) {

      sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
      }

      task sourcesJar(type: Jar) {
        from android.sourceSets.main.java.srcDirs
        classifier = 'sources'
      }

      task dokkaJavadoc(type: org.jetbrains.dokka.gradle.DokkaTask) {
        outputFormat = "javadoc"
        outputDirectory = "$buildDir/dokkaJavadoc"
      }

      task javadoc(type: Javadoc) {
        source = android.sourceSets.main.java.srcDirs
        classpath += configurations.compile
        classpath += project.files(android.getBootClasspath().join(File.pathSeparator))

        // Exclude generated files
        exclude '**/*.kt' // < ---- Exclude all kotlin files from javadoc file.
        exclude '**/BuildConfig.java'
        exclude '**/R.java'
      }

      task javadocJar(type: Jar, dependsOn: dokkaJavadoc) {
        classifier = 'javadoc'
        from dokkaJavadoc.outputDirectory
      }
      artifacts {
        archives javadocJar
        archives sourcesJar
      }
    }
  }

}

task clean(type: Delete) {
  delete rootProject.buildDir
}